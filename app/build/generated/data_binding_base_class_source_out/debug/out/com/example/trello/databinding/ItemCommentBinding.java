// Generated by view binder compiler. Do not edit!
package com.example.trello.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trello.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCommentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout comment;

  @NonNull
  public final MaterialTextView commentDate;

  @NonNull
  public final MaterialTextView commentText;

  @NonNull
  public final MaterialTextView commentWriter;

  @NonNull
  public final ShapeableImageView personImage;

  private ItemCommentBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout comment,
      @NonNull MaterialTextView commentDate, @NonNull MaterialTextView commentText,
      @NonNull MaterialTextView commentWriter, @NonNull ShapeableImageView personImage) {
    this.rootView = rootView;
    this.comment = comment;
    this.commentDate = commentDate;
    this.commentText = commentText;
    this.commentWriter = commentWriter;
    this.personImage = personImage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment;
      LinearLayout comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.commentDate;
      MaterialTextView commentDate = ViewBindings.findChildViewById(rootView, id);
      if (commentDate == null) {
        break missingId;
      }

      id = R.id.commentText;
      MaterialTextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.commentWriter;
      MaterialTextView commentWriter = ViewBindings.findChildViewById(rootView, id);
      if (commentWriter == null) {
        break missingId;
      }

      id = R.id.personImage;
      ShapeableImageView personImage = ViewBindings.findChildViewById(rootView, id);
      if (personImage == null) {
        break missingId;
      }

      return new ItemCommentBinding((RelativeLayout) rootView, comment, commentDate, commentText,
          commentWriter, personImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
