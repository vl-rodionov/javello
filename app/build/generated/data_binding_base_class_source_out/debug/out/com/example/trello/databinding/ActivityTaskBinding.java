// Generated by view binder compiler. Do not edit!
package com.example.trello.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trello.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTaskBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ShapeableImageView ImageTaskBackArrow;

  @NonNull
  public final RelativeLayout LBLTASKCommentsLine;

  @NonNull
  public final RelativeLayout LBLTASKDescriptionLine;

  @NonNull
  public final RelativeLayout LBLTASKPeopleLine;

  @NonNull
  public final MaterialTextView LBLTaskDescription;

  @NonNull
  public final MaterialTextView LBLTaskTaskName;

  @NonNull
  public final MaterialTextView LBLTaskViewComments;

  @NonNull
  public final MaterialTextView LBLTaskViewComplexity;

  @NonNull
  public final LinearLayout LBLTaskViewDescriptionContent;

  @NonNull
  public final MaterialTextView LBLTaskViewEmergency;

  @NonNull
  public final MaterialTextView LBLTaskViewPeopleAssigned;

  @NonNull
  public final MaterialTextView LBLTaskViewSize;

  @NonNull
  public final MaterialTextView LBLTaskViewTaskDescription;

  @NonNull
  public final MaterialTextView LBLTaskViewTeam;

  @NonNull
  public final ShapeableImageView addComment;

  @NonNull
  public final EditText commentText;

  @NonNull
  public final RecyclerView taskComments;

  private ActivityTaskBinding(@NonNull ScrollView rootView,
      @NonNull ShapeableImageView ImageTaskBackArrow, @NonNull RelativeLayout LBLTASKCommentsLine,
      @NonNull RelativeLayout LBLTASKDescriptionLine, @NonNull RelativeLayout LBLTASKPeopleLine,
      @NonNull MaterialTextView LBLTaskDescription, @NonNull MaterialTextView LBLTaskTaskName,
      @NonNull MaterialTextView LBLTaskViewComments,
      @NonNull MaterialTextView LBLTaskViewComplexity,
      @NonNull LinearLayout LBLTaskViewDescriptionContent,
      @NonNull MaterialTextView LBLTaskViewEmergency,
      @NonNull MaterialTextView LBLTaskViewPeopleAssigned,
      @NonNull MaterialTextView LBLTaskViewSize,
      @NonNull MaterialTextView LBLTaskViewTaskDescription,
      @NonNull MaterialTextView LBLTaskViewTeam, @NonNull ShapeableImageView addComment,
      @NonNull EditText commentText, @NonNull RecyclerView taskComments) {
    this.rootView = rootView;
    this.ImageTaskBackArrow = ImageTaskBackArrow;
    this.LBLTASKCommentsLine = LBLTASKCommentsLine;
    this.LBLTASKDescriptionLine = LBLTASKDescriptionLine;
    this.LBLTASKPeopleLine = LBLTASKPeopleLine;
    this.LBLTaskDescription = LBLTaskDescription;
    this.LBLTaskTaskName = LBLTaskTaskName;
    this.LBLTaskViewComments = LBLTaskViewComments;
    this.LBLTaskViewComplexity = LBLTaskViewComplexity;
    this.LBLTaskViewDescriptionContent = LBLTaskViewDescriptionContent;
    this.LBLTaskViewEmergency = LBLTaskViewEmergency;
    this.LBLTaskViewPeopleAssigned = LBLTaskViewPeopleAssigned;
    this.LBLTaskViewSize = LBLTaskViewSize;
    this.LBLTaskViewTaskDescription = LBLTaskViewTaskDescription;
    this.LBLTaskViewTeam = LBLTaskViewTeam;
    this.addComment = addComment;
    this.commentText = commentText;
    this.taskComments = taskComments;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Image_Task_backArrow;
      ShapeableImageView ImageTaskBackArrow = ViewBindings.findChildViewById(rootView, id);
      if (ImageTaskBackArrow == null) {
        break missingId;
      }

      id = R.id.LBL_TASK_commentsLine;
      RelativeLayout LBLTASKCommentsLine = ViewBindings.findChildViewById(rootView, id);
      if (LBLTASKCommentsLine == null) {
        break missingId;
      }

      id = R.id.LBL_TASK_descriptionLine;
      RelativeLayout LBLTASKDescriptionLine = ViewBindings.findChildViewById(rootView, id);
      if (LBLTASKDescriptionLine == null) {
        break missingId;
      }

      id = R.id.LBL_TASK_peopleLine;
      RelativeLayout LBLTASKPeopleLine = ViewBindings.findChildViewById(rootView, id);
      if (LBLTASKPeopleLine == null) {
        break missingId;
      }

      id = R.id.LBL_Task_Description;
      MaterialTextView LBLTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskDescription == null) {
        break missingId;
      }

      id = R.id.LBL_Task_taskName;
      MaterialTextView LBLTaskTaskName = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskTaskName == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_Comments;
      MaterialTextView LBLTaskViewComments = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewComments == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_Complexity;
      MaterialTextView LBLTaskViewComplexity = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewComplexity == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_descriptionContent;
      LinearLayout LBLTaskViewDescriptionContent = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewDescriptionContent == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_Emergency;
      MaterialTextView LBLTaskViewEmergency = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewEmergency == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_PeopleAssigned;
      MaterialTextView LBLTaskViewPeopleAssigned = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewPeopleAssigned == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_Size;
      MaterialTextView LBLTaskViewSize = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewSize == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_taskDescription;
      MaterialTextView LBLTaskViewTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewTaskDescription == null) {
        break missingId;
      }

      id = R.id.LBL_TaskView_Team;
      MaterialTextView LBLTaskViewTeam = ViewBindings.findChildViewById(rootView, id);
      if (LBLTaskViewTeam == null) {
        break missingId;
      }

      id = R.id.addComment;
      ShapeableImageView addComment = ViewBindings.findChildViewById(rootView, id);
      if (addComment == null) {
        break missingId;
      }

      id = R.id.commentText;
      EditText commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.taskComments;
      RecyclerView taskComments = ViewBindings.findChildViewById(rootView, id);
      if (taskComments == null) {
        break missingId;
      }

      return new ActivityTaskBinding((ScrollView) rootView, ImageTaskBackArrow, LBLTASKCommentsLine,
          LBLTASKDescriptionLine, LBLTASKPeopleLine, LBLTaskDescription, LBLTaskTaskName,
          LBLTaskViewComments, LBLTaskViewComplexity, LBLTaskViewDescriptionContent,
          LBLTaskViewEmergency, LBLTaskViewPeopleAssigned, LBLTaskViewSize,
          LBLTaskViewTaskDescription, LBLTaskViewTeam, addComment, commentText, taskComments);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
